{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"_2.^beQjx|FGt38A,8(E\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"iq_events_when_controller_button\" id=\"v--LB8|*Ci?EMBh3)^pi\" x=\"910\" y=\"150\"><field name=\"BUTTON\">ButtonLUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_spin\" id=\"$`F/)?{b.z3~F]M8vs+!\"><field name=\"MOTOR\">Flywheel</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_control_repeat_until\" id=\"TLXy|MZU#n;b.g:gfS~q\"><value name=\"CONDITION\"><block type=\"iq_sensing_pressing_controller\" id=\"k8nC2/[[s`$3)#u.gv}1\"><field name=\"BUTTON\">ButtonLDown</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_control_if_then\" id=\"e+RV]0{}Zv}WBr0l_Lgk\"><value name=\"CONDITION\"><block type=\"iq_operator_less_than\" id=\"H=tJUNPk(kRWuf?`jE)@\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"{@qZ0?Q-V$%L_}`ha_[2\"><field name=\"NUM\"></field></shadow><block type=\"iq_operator_subtract\" id=\"[UEgGGrvSgCCo:{(58it\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"W;DT4V9#1h(/WKNOpR2b\"><field name=\"NUM\"></field></shadow><block type=\"iq_operator_function\" id=\"|z9g/zR@o;i4KF}yzJgA\"><field name=\"OPERATOR\">abs</field><value name=\"NUM\"><shadow type=\"math_number\" id=\"AV=z-@wu~0ubK)1?`t99\"><field name=\"NUM\">70</field></shadow><block type=\"iq_sensing_velocity_of_motor\" id=\"].sO.L.goR|8OXTBKAxZ\"><field name=\"MOTOR\">Flywheel</field><field name=\"UNITS\">rpm</field></block></value></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"[}U/-;pRNV!4GJ=4L%fK\"><field name=\"NUM\">300</field></shadow></value></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"=[V:d_AzA1^t(LGL]i{C\"><field name=\"NUM\">10</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_sounds_play_note\" id=\"Z7FpRm*=/oy8`AD61Vdu\"><field name=\"NOTE\">0</field><field name=\"DURATION\">4</field></block></statement></block></statement><next><block type=\"iq_motion_stop_motor\" id=\"!w9]#K9Un=N3ws!;CUq-\"><field name=\"MOTOR\">Flywheel</field><next><block type=\"iq_sounds_play_note\" id=\"oWRWvh/T71[4nIc_U7!?\"><field name=\"NOTE\">0</field><field name=\"DURATION\">4</field><next><block type=\"iq_other_comment\" id=\"H]!HZs8)2~Io[-k_Nk{9\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"x_%xui*r;!^L7nSEP=W6\"><field name=\"comment\">#The flywheel logic</field></shadow></value><next><block type=\"iq_other_comment\" id=\"e#r;2Z8I0z*B_T:|6qbk\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"7^CR1EM;LOV`0,wCBDpB\"><field name=\"comment\">#does something</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"190\" y=\"250\"><next><block type=\"iq_motion_set_motor_stopping\" id=\"W[?ND$iAq#t4r;s]+h22\"><field name=\"MOTOR\">Flywheel</field><field name=\"MODE\">coast</field><next><block type=\"iq_motion_set_motor_velocity\" id=\"t6?IgVARXn^77i6J5N6N\"><field name=\"MOTOR\">Flywheel</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"xU52Q5FN#(z?.$+jz4an\"><field name=\"NUM\">300</field></shadow></value><next><block type=\"iq_sounds_play_note\" id=\"^7M69}rYBc~m48U|c1Oc\"><field name=\"NOTE\">0</field><field name=\"DURATION\">4</field><next><block type=\"iq_other_comment\" id=\"w=62d5@z^SzR9b}Yp/mk\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"krm).J@MIe/g*lY%OsS+\"><field name=\"comment\">//Sets up parameters for flywheel</field></shadow></value></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_started\" id=\"Bwc8/PT1pkp2DOzw1(:a\" x=\"150\" y=\"570\"><next><block type=\"iq_motion_set_motor_velocity\" id=\"/bc#]wN[nrULdbx]?](g\"><field name=\"MOTOR\">Intake</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"IRPbH2!|X=3qJeX2eEXb\"><field name=\"NUM\">70</field></shadow></value><next><block type=\"iq_other_comment\" id=\"K*@Y6:!*O=4`tZ.bI|b=\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"dXGc}H%a*t;`3qt$QX9x\"><field name=\"comment\">#Intake Is Set to faster speed for increased intake performance (The motor turns 70</field></shadow></value><next><block type=\"iq_other_comment\" id=\"_YxH0,}4j1fHd{_$B`aB\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"nBaj0sMinjSmJ|?w|yX[\"><field name=\"comment\">#-rotations a minute)-FAST</field></shadow></value></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"vxq+]asZoTPV53p!jU;)\" x=\"1330\" y=\"530\"><field name=\"BUTTON\">ButtonEUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_set_motor_velocity\" id=\"{%-|vnkl8slbzTV6`xGN\"><field name=\"MOTOR\">Flywheel</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"dFE^aBO5?GM|{~P*apYX\"><field name=\"NUM\">70</field></shadow></value><next><block type=\"iq_motion_spin\" id=\"R(O*hBp/b}`Ry=)4=ib4\"><field name=\"MOTOR\">Flywheel</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_control_repeat_until\" id=\"$8^|=z%WUH;h:fo.x%qt\"><value name=\"CONDITION\"><block type=\"iq_sensing_pressing_controller\" id=\"/M9=3Kls_iNj~8ii;g(`\"><field name=\"BUTTON\">ButtonEDown</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_control_if_then\" id=\"yb7I(P+Uloakwts!Bqej\"><value name=\"CONDITION\"><block type=\"iq_operator_less_than\" id=\"jn,RwW_${rc5X+.enF]$\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"Jx@RQre]Dvx5-o)?,A*X\"><field name=\"NUM\"></field></shadow><block type=\"iq_operator_subtract\" id=\"zkuWbA5uk+kz,5_vu;Oo\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"EzAGK}3BY*4x5Y[`cs*1\"><field name=\"NUM\"></field></shadow><block type=\"iq_operator_function\" id=\":S1A{pYj=7SnG[#F*-Y)\"><field name=\"OPERATOR\">abs</field><value name=\"NUM\"><shadow type=\"math_number\" id=\"REuduyB]}IFwl2`XY5vS\"><field name=\"NUM\">70</field></shadow><block type=\"iq_sensing_velocity_of_motor\" id=\"*|rqN?Pf3|R8N^iHga(n\"><field name=\"MOTOR\">Flywheel</field><field name=\"UNITS\">rpm</field></block></value></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"-yZ_C1I;75GwM^r?xUnM\"><field name=\"NUM\">70</field></shadow></value></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"jcbTWBb|$exr+J8qls{k\"><field name=\"NUM\">10</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_sounds_play_note\" id=\"FkjnbRcTg`5/3pnMQv?S\"><field name=\"NOTE\">0</field><field name=\"DURATION\">4</field></block></statement></block></statement><next><block type=\"iq_motion_stop_motor\" id=\"/jT;`S-sf~vx-@=%Jh+f\"><field name=\"MOTOR\">Flywheel</field><next><block type=\"iq_sounds_play_note\" id=\"S~@HD3aPj,lR-Cf_l*FI\"><field name=\"NOTE\">0</field><field name=\"DURATION\">4</field><next><block type=\"iq_other_comment\" id=\",SgF;B8T(:3R4hoSTJP!\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"s:uIl#F;qc1,RkyU0h7_\"><field name=\"comment\">#The flywheel logic</field></shadow></value><next><block type=\"iq_other_comment\" id=\"OPt:g*poBu.F7,7l~(SD\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"u?zdUSg7;O2%0EvalrLe\"><field name=\"comment\">#does something</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[3,9],"name":"Flywheel","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"Intake","leftDir":"false","right":"","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"tank"},"triportSourcePort":22},{"port":[6,12,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[10],"name":"Intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"}}],"slot":0,"platform":"IQ","sdkVersion":"20210916.19.00.00","appVersion":"2.2.2","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\nmotor FlywheelMotorA = motor(PORT3, true);\nmotor FlywheelMotorB = motor(PORT9, false);\nmotor_group Flywheel = motor_group(FlywheelMotorA, FlywheelMotorB);\n\ncontroller Controller = controller();\nmotor LeftDriveSmart = motor(PORT6, 1, false);\nmotor RightDriveSmart = motor(PORT12, 1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 200, 173, 76, mm, 1);\nmotor Intake = motor(PORT10, false);\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool ControllerLeftShoulderControlMotorsStopped = true;\nbool DrivetrainLNeedsToBeStopped_Controller = true;\nbool DrivetrainRNeedsToBeStopped_Controller = true;\n\n// define a task that will handle monitoring inputs from Controller\nint rc_auto_loop_function_Controller() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = AxisA\n      // right = AxisD\n      int drivetrainLeftSideSpeed = Controller.AxisA.position();\n      int drivetrainRightSideSpeed = Controller.AxisD.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n      // check the ButtonLUp/ButtonLDown status to control Intake\n      if (Controller.ButtonLUp.pressing()) {\n        Intake.spin(forward);\n        ControllerLeftShoulderControlMotorsStopped = false;\n      } else if (Controller.ButtonLDown.pressing()) {\n        Intake.spin(reverse);\n        ControllerLeftShoulderControlMotorsStopped = false;\n      } else if (!ControllerLeftShoulderControlMotorsStopped) {\n        Intake.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        ControllerLeftShoulderControlMotorsStopped = true;\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller(rc_auto_loop_function_Controller);\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when Controller ButtonLUp pressed\" hat block\nvoid onevent_ControllerButtonLUp_pressed_0() {\n  Flywheel.spin(forward);\n  while (!Controller.ButtonLDown.pressing()) {\n    if (fabs(static_cast<float>(Flywheel.velocity(rpm))) - 300.0 < 10.0) {\n      Brain.playNote(3, 0, 1000);\n    }\n  wait(20, msec);\n  }\n  Flywheel.stop();\n  Brain.playNote(3, 0, 1000);\n  // #The flywheel logic\n  // #does something\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Flywheel.setStopping(coast);\n  Flywheel.setVelocity(300.0, rpm);\n  Brain.playNote(3, 0, 1000);\n  // //Sets up parameters for flywheel\n  return 0;\n}\n\n// \"when started\" hat block\nint whenStarted2() {\n  Intake.setVelocity(70.0, rpm);\n  // #Intake Is Set to faster speed for increased intake performance (The motor turns 70\n  // #-rotations a minute)-FAST\n  return 0;\n}\n\n// \"when Controller ButtonEUp pressed\" hat block\nvoid onevent_ControllerButtonEUp_pressed_0() {\n  Flywheel.setVelocity(70.0, rpm);\n  Flywheel.spin(forward);\n  while (!Controller.ButtonEDown.pressing()) {\n    if (fabs(static_cast<float>(Flywheel.velocity(rpm))) - 70.0 < 10.0) {\n      Brain.playNote(3, 0, 1000);\n    }\n  wait(20, msec);\n  }\n  Flywheel.stop();\n  Brain.playNote(3, 0, 1000);\n  // #The flywheel logic\n  // #does something\n}\n\n\nint main() {\n  // register event handlers\n  Controller.ButtonLUp.pressed(onevent_ControllerButtonLUp_pressed_0);\n  Controller.ButtonEUp.pressed(onevent_ControllerButtonEUp_pressed_0);\n\n  wait(15, msec);\n  vex::task ws1(whenStarted2);\n  whenStarted1();\n}","target":"Physical"}