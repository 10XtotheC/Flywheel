{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"_2.^beQjx|FGt38A,8(E\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable><variable type=\"\" id=\"zl^Tdgfk|@5ZMv8=D0xt\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">Fault_Tolerance_FW</variable></variables><block type=\"iq_events_when_started\" id=\"Bwc8/PT1pkp2DOzw1(:a\" x=\"430\" y=\"-190\"><next><block type=\"iq_variables_set_variable\" id=\"s{Y.%juA5XZs{D$v*_JU\"><field name=\"VARIABLE\" id=\"zl^Tdgfk|@5ZMv8=D0xt\" variabletype=\"\">Fault_Tolerance_FW</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"pdFGSX)qr1z+#OXIO1^e\"><field name=\"NUM\">10</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"M_pVp-v3a/waPh;LD.8Y\"><field name=\"MOTOR\">Intake</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"Nqq.9L!P|6q?(nFM{swA\"><field name=\"NUM\">400</field></shadow></value><next><block type=\"iq_looks_set_touchled_brightness\" id=\"+w,M$Paaj?jBBO5*b`=H\"><field name=\"TOUCHLED\">Human_Notifcation</field><value name=\"VALUE\"><shadow type=\"math_whole_number\" id=\";X]Us1ZVN];!;fjj(}^F\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_other_comment\" id=\"K*@Y6:!*O=4`tZ.bI|b=\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"dXGc}H%a*t;`3qt$QX9x\"><field name=\"comment\">#Intake Is Set to faster speed for increased intake performance (The motor turns 70</field></shadow></value><next><block type=\"iq_other_comment\" id=\"_YxH0,}4j1fHd{_$B`aB\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"nBaj0sMinjSmJ|?w|yX[\"><field name=\"comment\">#-rotations a minute)-FAST</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"v--LB8|*Ci?EMBh3)^pi\" x=\"970\" y=\"130\"><field name=\"BUTTON\">ButtonLUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_spin\" id=\"$`F/)?{b.z3~F]M8vs+!\"><field name=\"MOTOR\">Flywheel</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_control_repeat_until\" id=\"TLXy|MZU#n;b.g:gfS~q\"><value name=\"CONDITION\"><block type=\"iq_sensing_pressing_controller\" id=\"k8nC2/[[s`$3)#u.gv}1\"><field name=\"BUTTON\">ButtonLDown</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_control_if_then_else\" id=\"@dU`1%TMyx$+@8!{$YRH\"><value name=\"CONDITION\"><block type=\"iq_operator_less_than\" id=\"H=tJUNPk(kRWuf?`jE)@\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"{@qZ0?Q-V$%L_}`ha_[2\"><field name=\"NUM\"></field></shadow><block type=\"iq_operator_subtract\" id=\"[UEgGGrvSgCCo:{(58it\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"W;DT4V9#1h(/WKNOpR2b\"><field name=\"NUM\"></field></shadow><block type=\"iq_operator_function\" id=\"|z9g/zR@o;i4KF}yzJgA\"><field name=\"OPERATOR\">abs</field><value name=\"NUM\"><shadow type=\"math_number\" id=\"AV=z-@wu~0ubK)1?`t99\"><field name=\"NUM\"></field></shadow><block type=\"iq_sensing_velocity_of_motor\" id=\"].sO.L.goR|8OXTBKAxZ\"><field name=\"MOTOR\">Flywheel</field><field name=\"UNITS\">rpm</field></block></value></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"[}U/-;pRNV!4GJ=4L%fK\"><field name=\"NUM\">75</field></shadow></value></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"=[V:d_AzA1^t(LGL]i{C\"><field name=\"NUM\">10</field></shadow><block type=\"iq_variables_variable\" id=\"+C1(6B!j9:c`rf0a~qt3\"><field name=\"VARIABLE\" id=\"zl^Tdgfk|@5ZMv8=D0xt\" variabletype=\"\">Fault_Tolerance_FW</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_looks_set_touchled_color\" id=\"uLnE0-gwXSQ24of9kl$a\"><field name=\"TOUCHLED\">Human_Notifcation</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"y_irCJdyRAr+G=H6#$FA\"><field name=\"COLOR\">purple</field></shadow></value><next><block type=\"iq_looks_clear_all_rows_new\" id=\"IRpsS_u8jEDBtBX!hz/x\"><field name=\"TARGET\">Brain</field><next><block type=\"iq_looks_print_new\" id=\"hdP!=8iqgW1=BwHEHG^$\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"Lrqw{GJ/yTl4bfYNs6Ix\"><field name=\"TEXT\">Flywheel Ready</field></shadow></value></block></next></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"iq_looks_set_touchled_color\" id=\"7(khSgP^o`d%iTAH+Qdl\"><field name=\"TOUCHLED\">Human_Notifcation</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"+y]cYl$3:nQI=swlW..a\"><field name=\"COLOR\">red</field></shadow></value><next><block type=\"iq_looks_clear_all_rows_new\" id=\"dGn6U%Ycn7RfNkHo[Y=e\"><field name=\"TARGET\">Brain</field><next><block type=\"iq_looks_print_new\" id=\"/ZAFcl2-wFM4oV@-#aF4\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\",s.7,y@xbO=[+^PhWY1Q\"><field name=\"TEXT\">Flywheel Not Ready</field></shadow></value></block></next></block></next></block></statement></block></statement><next><block type=\"iq_motion_stop_motor\" id=\"!w9]#K9Un=N3ws!;CUq-\"><field name=\"MOTOR\">Flywheel</field><next><block type=\"iq_looks_set_touchled_color\" id=\"yDsxGl!a{h$MuV%XDY4_\"><field name=\"TOUCHLED\">Human_Notifcation</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"l*H8ZmW7o$BY/7drsm^?\"><field name=\"COLOR\">red</field></shadow></value><next><block type=\"iq_looks_clear_all_rows_new\" id=\"MyA{iz%XqE:``vl4#*%8\"><field name=\"TARGET\">Brain</field><next><block type=\"iq_looks_print_new\" id=\"QoTy$@`+?N!r9X-!=x{3\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"un9/!SrXf4U};u4RsV1z\"><field name=\"TEXT\">Flywheel Not Started</field></shadow></value><next><block type=\"iq_other_comment\" id=\"H]!HZs8)2~Io[-k_Nk{9\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"x_%xui*r;!^L7nSEP=W6\"><field name=\"comment\">#The flywheel logic</field></shadow></value><next><block type=\"iq_other_comment\" id=\"e#r;2Z8I0z*B_T:|6qbk\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"7^CR1EM;LOV`0,wCBDpB\"><field name=\"comment\">#does something, but it does it close</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"550\" y=\"170\"><next><block type=\"iq_motion_set_motor_stopping\" id=\"W[?ND$iAq#t4r;s]+h22\"><field name=\"MOTOR\">Flywheel</field><field name=\"MODE\">coast</field><next><block type=\"iq_motion_set_motor_velocity\" id=\"t6?IgVARXn^77i6J5N6N\"><field name=\"MOTOR\">Flywheel</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"xU52Q5FN#(z?.$+jz4an\"><field name=\"NUM\">75</field></shadow></value><next><block type=\"iq_looks_set_touchled_color\" id=\"qZZj;ekUd_dU8gg-77i?\"><field name=\"TOUCHLED\">Human_Notifcation</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"Tw?8|t1dkNOuwZlJCNY{\"><field name=\"COLOR\">red</field></shadow></value><next><block type=\"iq_looks_clear_all_rows_new\" id=\"n)BBC28cY;4!;vLoLAdF\"><field name=\"TARGET\">Brain</field><next><block type=\"iq_looks_print_new\" id=\"RXjZ+$zl*]7+9%%.7~wF\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"KrhkHi90hht*Bt!8d$ij\"><field name=\"TEXT\">Flywheel Not Started</field></shadow></value><next><block type=\"iq_drivetrain_set_drive_velocity\" id=\"Ltmy5Q6mN]C2O:oE!HvZ\"><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"3KlTcy%*yMV[1f?X_lE[\"><field name=\"NUM\">150</field></shadow></value><next><block type=\"iq_other_comment\" id=\"w=62d5@z^SzR9b}Yp/mk\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"krm).J@MIe/g*lY%OsS+\"><field name=\"comment\">//Sets up parameters for flywheel</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[3,9],"name":"Flywheel","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"Intake","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"tank"},"triportSourcePort":22},{"port":[6,12,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:3","direction":"fwd","gyroType":"none","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[4],"name":"Human_Notifcation","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{}},{"port":[10],"name":"Intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"}}],"slot":0,"platform":"IQ","sdkVersion":"20210916.19.00.00","appVersion":"2.2.2","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\nmotor FlywheelMotorA = motor(PORT3, true);\nmotor FlywheelMotorB = motor(PORT9, false);\nmotor_group Flywheel = motor_group(FlywheelMotorA, FlywheelMotorB);\n\ncontroller Controller = controller();\nmotor LeftDriveSmart = motor(PORT6, 0.3333333333333333, false);\nmotor RightDriveSmart = motor(PORT12, 0.3333333333333333, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 200, 173, 76, mm, 1);\ntouchled Human_Notifcation = touchled(PORT4);\nmotor Intake = motor(PORT10, false);\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool ControllerRightShoulderControlMotorsStopped = true;\nbool DrivetrainLNeedsToBeStopped_Controller = true;\nbool DrivetrainRNeedsToBeStopped_Controller = true;\n\n// define a task that will handle monitoring inputs from Controller\nint rc_auto_loop_function_Controller() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = AxisA\n      // right = AxisD\n      int drivetrainLeftSideSpeed = Controller.AxisA.position();\n      int drivetrainRightSideSpeed = Controller.AxisD.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n      // check the ButtonRUp/ButtonRDown status to control Intake\n      if (Controller.ButtonRUp.pressing()) {\n        Intake.spin(forward);\n        ControllerRightShoulderControlMotorsStopped = false;\n      } else if (Controller.ButtonRDown.pressing()) {\n        Intake.spin(reverse);\n        ControllerRightShoulderControlMotorsStopped = false;\n      } else if (!ControllerRightShoulderControlMotorsStopped) {\n        Intake.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        ControllerRightShoulderControlMotorsStopped = true;\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller(rc_auto_loop_function_Controller);\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0;\n\nfloat myVariable, Fault_Tolerance_FW;\n\n// \"when started\" hat block\nint whenStarted1() {\n  Fault_Tolerance_FW = 10.0;\n  Intake.setVelocity(400.0, rpm);\n  Human_Notifcation.setBrightness(100);\n  // #Intake Is Set to faster speed for increased intake performance (The motor turns 70\n  // #-rotations a minute)-FAST\n  return 0;\n}\n\n// \"when Controller ButtonLUp pressed\" hat block\nvoid onevent_ControllerButtonLUp_pressed_0() {\n  Flywheel.spin(forward);\n  while (!Controller.ButtonLDown.pressing()) {\n    if (fabs(static_cast<float>(Flywheel.velocity(rpm))) - 75.0 < Fault_Tolerance_FW) {\n      Human_Notifcation.setColor(purple);\n      Brain.Screen.clearScreen();\n      Brain.Screen.print(\"Flywheel Ready\");\n    }\n    else {\n      Human_Notifcation.setColor(red);\n      Brain.Screen.clearScreen();\n      Brain.Screen.print(\"Flywheel Not Ready\");\n    }\n  wait(20, msec);\n  }\n  Flywheel.stop();\n  Human_Notifcation.setColor(red);\n  Brain.Screen.clearScreen();\n  Brain.Screen.print(\"Flywheel Not Started\");\n  // #The flywheel logic\n  // #does something, but it does it close\n}\n\n// \"when started\" hat block\nint whenStarted2() {\n  Flywheel.setStopping(coast);\n  Flywheel.setVelocity(75.0, rpm);\n  Human_Notifcation.setColor(red);\n  Brain.Screen.clearScreen();\n  Brain.Screen.print(\"Flywheel Not Started\");\n  Drivetrain.setDriveVelocity(150.0, rpm);\n  // //Sets up parameters for flywheel\n  return 0;\n}\n\n\nint main() {\n  // register event handlers\n  Controller.ButtonLUp.pressed(onevent_ControllerButtonLUp_pressed_0);\n\n  wait(15, msec);\n  vex::task ws1(whenStarted2);\n  whenStarted1();\n}","target":"Physical"}